%{
    #include "slang.hpp"
    #include <iostream>
    extern Node* root;
    extern char yytext[];
%}

%token FUNC PRINT RETURN OPENBLOCK CLOSEBLOCK INT
%token VAR INT_NUMBER FLOAT_NUMBER IDENTIFIER STRING

%left '|' '&' '^'
%left '+' '-'
%left '*' '/'
%nonassoc UMINUS
%right '~'
//%expect 1

%nonassoc IF THEN
%nonassoc ELSE

%%

program : 
    global_list {
        auto node = new Node(NodeType::PROGRAM, {get_node($1)});
        root = node;
    };

global_list : 
    global {
        auto node = new Node(NodeType::GLOBAL_LIST, {get_node($1)});
        $$ = store_node(node);
    }
    | global_list global {
        auto node = new Node(NodeType::GLOBAL_LIST, {get_node($1), get_node($2)});
        $$ = store_node(node);
    };

global :
    FUNC STRING {
        auto node = new StringNode(std::string(yytext));
        $$ = store_node(node);
    };

%%

int yyerror(const char* error) {
    std::cout << error << " on line " << yylineno << std::endl;
    exit(EXIT_FAILURE);
}